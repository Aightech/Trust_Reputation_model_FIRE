extensions [csv]
globals [PL_PERFECT PL_GOOD PL_OK PL_WORST PL_BAD GOOD ORDINARY BAD INTERMITTENT 
  sig_good sig_ordinary sig_bad 
  degradation lambda nBF nRL
  wI wW wC
  gamma
  history-size
  data-list
]

to set_constant
  set PL_PERFECT 10
  set PL_GOOD 5
  set PL_OK 0
  set PL_BAD -5
  set PL_WORST -10
  set GOOD 0
  set ORDINARY 1
  set BAD 2
  set INTERMITTENT 3
  
  set sig_good 1.0 ;; standart deviation for good profiles
  set sig_ordinary 2.0 ;; standart deviation for ordinary profiles
  set sig_bad 2.0 ;; standart deviation for bad profiles
  set degradation 0.1 ;; linear coefficient for degradation of the perf of providers regarding the distance
  
  set lambda (-5 / ln(0.5))
  set nBF 2
  set nRL 5
  
  set wI 2
  set wW 1
  set wC 0.5
  
  set gamma (-1 * ln(0.5)) 
  set history-size 10
  set data-list [["Ticks" "Temperature" "Mean UG" "Std Dev UG" ]]
end

to save-data
  set data-list lput (list ticks Temp mean-UG stand-dev-UG) data-list 
  
end

to export-measures
  let name "test"
;  if do_IT [set name (word name "IT-")]
;  if do_WR [set name (word name "WR-")]
;  if do_CR [set name (word name "CR-")]
;  if DYNAMIC_ENV [set name (word name "Dyn-")]

  let date date-and-time
  set date substring date 0 13
  set date remove ":" date
  set date remove " " date
  set date remove "." date

  csv:to-file (word "SAVE_" name date ".csv") (data-list)
end